Відповіді на контрольні запитання:
1)За допомогою команди git push.
2)Завдяки команді git pull.
3)Команда git marge.
4)Завдаяки команді "git submodule init" отримаєте ініціалізацію конфігураційного, локального файлу. Та команді "git submodule update", що дозволяє отримати доступ до всіх даних проєкту.
5)Розподілені системи контролю версії не потребують сервера, адже всі файли знаходяться на кожному з комп'ютерів.
6)Перевагами  використання розподіленої системи контролю версій є: 1.Можливість створення різних варіантів одного документу; 2.Документування всіх змін (коли ким було змінено/додано, хто який рядок змінив); 3. Реалізує функцію контролю доступу користувачів до файлів.
7) Недоліками використання розподіленої системи контролю версій є: 1.Не можливо контролювати доступ до файлів; 2.Відсутня загальна нумерація версій файлів; 3.Відсутня можливість блокування файлів.
8)Репозиторій – це місце, де зберігаються і підтримуються будь-які дані, зазвичай, у вигляді файлів, для доступного поширення і використання у мережі.
9) Розподілені системи потрібні, щоб представляти їх користувачам єдиною об'єднаною системою.
10) Зміна в основну версію проекту робоча копія на комп'ютері замість старою стає новою.
11) Комміт  — це фіксація змін або запис змін у репозиторій.
12) Модифікація проекту - зміна, оновленняь, поява нових ознак.
13) Система керування версіями - програмний інструмент для керування версіями одиниці інформації: початкового коду програми, скрипту, вебсторінки, вебсайту, 3D-моделі, текстового документу 
14) Git marge, злиття гілок. 
15) Коли кілька людей правлять один і той же код.
16) Коли за кодом працюватиме одна людина.
17) Так. У міру внесення змін в основну версію проекту робоча копія на комп'ютері розробника старіє: розбіжність її з основною версією проекту збільшується. Це підвищує ризик виникнення конфліктних змін. Тому зручно підтримувати робочу копію в стані, максимально близькому до поточної основної версії.
